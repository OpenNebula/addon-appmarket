// -------------------------------------------------------------------------- //
// Copyright 2002-2015, OpenNebula Project, OpenNebula Systems                //
//                                                                            //
// Licensed under the Apache License, Version 2.0 (the "License"); you may    //
// not use this file except in compliance with the License. You may obtain    //
// a copy of the License at                                                   //
//                                                                            //
// http://www.apache.org/licenses/LICENSE-2.0                                 //
//                                                                            //
// Unless required by applicable law or agreed to in writing, software        //
// distributed under the License is distributed on an "AS IS" BASIS,          //
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   //
// See the License for the specific language governing permissions and        //
// limitations under the License.                                             //
// -------------------------------------------------------------------------- //

%ul.nav.pull-right.nav-pills
  %li.divider-vertical
  - if @session.anonymous?
    %li.dropdown
      %a.dropdown-toggle{'href' => "#", 'data-toggle' => "dropdown"}
        %i.icon-user.icon-white
        %strong Sign in
        %b.caret
      %ul.dropdown-menu{'style' => 'padding: 15px; padding-bottom: 0px;'}
        %li
          %form#login_form{'method' => '', 'action' => ''}
            .control-group
              .controls
                %input#username{'type' => 'text', 'placeholder' => 'Username'}
                %input#password{'type' => 'password', 'placeholder' => 'Password'}
            .control-group
              .controls
                //%input#user_remember_me{'type' => 'checkbox'}
                //  Stay signed in
                %input.pull-right.btn.btn-primary{'type' => 'submit', 'value' => 'Sign in'}
            %br
        %a{'data-toggle' => 'modal', 'href' => '#create_user', 'style' => 'text-align: center', 'id' => "request_dev"}
          Request Developer Access
        %hr
  - elsif @session.admin? || @session.user?
    %li.dropdown
      %a.dropdown-toggle{'href' => "#", 'data-toggle' => "dropdown"}
        %i.icon-user.icon-white
        = @session.name
        %b.caret
      %ul.dropdown-menu
        %li
          %a
            %strong Role:
            =@session.role
        %li.divider
        %li
          %a{'data-toggle' => 'modal', 'href' => '#create_app'} Create new Appliance
        - if @session.admin?
          %li
            %a{'href' => 'user'} Manage Users
        %li.divider
        %li
          %input.btn.btn-danger.pull-right#logout_btn{'type' => 'button', "value" => "Sign out"}


.modal.hide.fade#create_app
  .modal-header
    %button.close{'type' => 'button', 'data-dismiss' => 'modal'} x
    %h3 Create a new Appliance
  .modal-body
    %form.form-horizontal#create_app_form{'method' => 'post', 'action' => ''}
      = haml :app_form
      %input.btn.btn-inverse.pull-right#create_app_button{'href' => '#', 'type' => 'submit', 'value' => 'Create appliance'}

.modal.hide.fade#update_app
  .modal-header
    %button.close{'type' => 'button', 'data-dismiss' => 'modal'} x
    %h3 Update Appliance
  .modal-body
    %form.form-horizontal#update_app_form{'method' => 'put', 'action' => ''}
      = haml :app_form
      %input.btn.btn-inverse.pull-right#create_app_button{'href' => '#', 'type' => 'submit', 'value' => 'Update appliance'}


.modal.hide.fade#create_user
  .modal-header
    %button.close{'type' => 'button', 'data-dismiss' => 'modal'} x
    %h3 Developer registration
  .modal-body
    %form.form-horizontal#create_user_form{'method' => 'post', 'action' => ''}
      = haml :user_form
      %input.btn.btn-inverse.pull-right#create_user_button{'href' => '#', 'type' => 'submit', 'value' => 'Request Developer Access'}
    .control-group
      .controls
        %label.checkbox{'for' => 'accept_form'}
          %input.input-xlarge{'name' => 'accept','id' => 'accept_form', 'type' => 'checkbox'}
          = haml :'custom/terms_of_use'

.modal.hide.fade#update_user
  .modal-header
    %button.close{'type' => 'button', 'data-dismiss' => 'modal'} x
    %h3 Developer registration
  .modal-body
    %form.form-horizontal#update_user_form{'method' => 'post', 'action' => ''}
      = haml :user_form
      %input.btn.btn-inverse.pull-right#update_user_button{'href' => '#', 'type' => 'submit', 'value' => 'Update User'}

:javascript
  $(document).ready(function() {
    $("#create_app_form").submit(function (){
      $.ajax({
        url: "/appliance",
        type: "POST",
        data: JSON.stringify($("#create_app_form").serializeObject()),
        success: function(){
          window.location.reload();
        },
        error: function(response){
          alert(response.responseText);
          return true;
        }
      });
      return false;
    });

    $("#create_user_form").submit(function (){
      password = $('#password_form', '#create_user_form')[0]
      cpassword = $('#confirm_password_form', '#create_user_form')[0]

      if (password.value != cpassword.value) {
        alert("Your password and confirmation password do not match.");
        cpassword.focus();
        return false;
      }

      if ($('#accept_form')[0].checked == false) {
        alert("You have to accept Terms of Use to create an account");
        return false;
      } else {
        $('#accept_form').removeAttr('checked')
      }

      $.ajax({
        url: "/user",
        type: "POST",
        data: JSON.stringify($("form").serializeObject()),
        success: function(){
          $('#create_user').modal('hide')
          clearForm($('#create_user_form')[0])
          alert("Your account is pending approval. Until your account is approved you will be unable to sign in. You will receive an email when your account has been approved.");
        },
        error: function(response){
          alert(response.responseText);
          return true;
        }
      });

      return false;
    });

    $("#login_form").submit(function (){
      var username = $("#username").val();
      var password = $("#password").val();
      var remember = $("#user_remember_me").is(":checked");

      $.ajax({
        url: "/login",
        type: "POST",
        data: {remember: remember},
        beforeSend : function(req) {
          req.setRequestHeader( "Authorization", "Basic " + btoa(username + ":" + password))
        },
        success: function(){
          window.location.reload();
        },
        error: function(response){
          alert("The username or password you entered is incorrect");
          clearForm($('#login_form')[0])
          return true;
        }
      });

      return false;
    });

    $("#logout_btn").click(function (){
      $.ajax({
        url: "/logout",
        type: "POST",
        success: function(){
          document.location.href="/";
        },
        error: function(){
          return true;
        }
      });

      return false;
    });

    // Setup drop down menu
    $('.dropdown-toggle').dropdown();

    // Fix input element click problem
    $('.dropdown input, .dropdown label').click(function(e) {
      e.stopPropagation();
    });

    $.each([$("#create_app"), $("#update_app")], function(index, context){
      var file_index = 0;

      $(".add_file_button", context).on("click", function (){
        file_index++;
        $("#more_files", context).append($('#file_section', context).html().replace(/0/g,file_index));
        return false;
      });
    })

  } );
